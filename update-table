#!/usr/bin/python3

import io
import os
import glob
import yaml

BEGIN = '<!--begin autogenerated table-->'
END = '<!--end autogenerated table-->'
MANAGES = '# manages: '
os.chdir(os.path.dirname(__file__))
TARGET = 'README.md'


host_roles = {
    'apollo': dict(),
    'hades': dict(),
}

for playbook_file in glob.iglob('*.yml'):
    with open(playbook_file) as file:
        playbook = yaml.safe_load(file)
        for step in playbook:
            host = step['hosts']
            for role in step['roles']:
                if isinstance(role, dict):
                    role = role['role']
                host_roles[host][role] = playbook_file


managed_items = []

for role_task_file in glob.iglob('roles/*/tasks/*.yml'):
    role_name = role_task_file.partition('/tasks/')[0][6:]
    with open(role_task_file) as file:
        for line in file:
            if line.startswith(MANAGES):
                item = line[len(MANAGES):].rstrip()
                managed_items.append((item, role_name))
managed_items.sort(key=lambda x: (x[1] != 'x', x[1], x[0]))


buf = io.StringIO()
buf.write('\n| Item | Role |')
for host in host_roles:
    buf.write(f' {host} |')
buf.write('\n')

buf.write('|')
buf.write('---|' * (len(host_roles) + 2))
buf.write('\n')

for item, role in managed_items:
    buf.write(f'| {item} | {role} |')
    for host, roles in host_roles.items():
        buf.write(f' {roles.get(role, "x")} |')
    buf.write('\n')

with open(TARGET) as file:
    data = file.read()
begin = data.index(BEGIN)
end = data.index(END)
assert begin < end, (begin, end)

with open(TARGET, 'w') as file:
    file.write(data[:begin])
    file.write(BEGIN)
    file.write(buf.getvalue())
    file.write(data[end:])
